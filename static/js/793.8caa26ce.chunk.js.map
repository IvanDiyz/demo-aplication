{"version":3,"file":"static/js/793.8caa26ce.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-k-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-k-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Qdrif\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    let activetEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n\r\n    let deactivetEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatusTC(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    console.log('render');\r\n    return (\r\n      <div>\r\n          { !editMode &&\r\n            <div>\r\n            <span onDoubleClick={activetEditMode}>{props.status || '----'}</span>\r\n          </div>\r\n          }\r\n          { editMode &&\r\n            <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivetEditMode} value={status} />\r\n          </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/users.png\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img\r\n          src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\r\n          alt=\"\"\r\n        />\r\n      </div> */}\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} alt=\"\" />\r\n        <div>\r\n          <ProfileStatusWithHooks \r\n            status={props.status}\r\n            updateStatusTC={props.updateStatusTC}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__-HkGl\",\"posts\":\"MyPosts_posts__iJcmi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__V2Jmh\",\"avatar\":\"Post_avatar__PzDhz\"};","import s from \"./Post.module.css\";\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        className={s.avatar}\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRW8fN0rNZsyZlz8r0VSpNNk_h-iJ6IZ99NPA&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo(\r\n  (props) => {\r\n    console.log('render MyPost')\r\n    let postsElement = [...props.posts].reverse().map((p) => {\r\n      /* через метод MAP мвы в параметре M передает каждый обьект posts по очереди \r\n      и помещаем в компоненту POST как PROPS */\r\n      return <Post message={p.message} likesCount={p.lieksCount} />;\r\n    });\r\n  \r\n    let addMessage = (formData) => {\r\n      console.log(props)\r\n      props.addPostsContainer(formData.newPostText)\r\n    }\r\n  \r\n    return (\r\n      <div className={s.postsBlock}>\r\n        <h3>my post</h3>\r\n        <div>\r\n          <OnFormMyPostRedux onSubmit={addMessage}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n          {postsElement}\r\n          {/* компоненты Post мы зарефакатарели через метод обьекта MAP и превратили \r\n          все посты в строчку вышел\r\n          <Post message={postsData[0].message} likesCount={postsData[0].lieksCount} />\r\n          <Post message={postsData[1].message} likesCount={postsData[1].lieksCount} /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet OnFormMyPost = (props) => {\r\n  console.log(props)\r\n  return (\r\n    <form onSubmit={props.handleSubmit} action=\"\">\r\n      <div>\r\n        <Field \r\n          name=\"newPostText\" \r\n          placeholder=\"Your Message\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet OnFormMyPostRedux = reduxForm({form: \"profileAddMessage\"})(OnFormMyPost)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreater,\r\n} from \"../../../redux/profille-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\n\r\n\r\n // функция добовляющая пост\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\n// функция добовляющая пост\r\n\r\n\r\n// функция отслеживает изменения в теги TEXTAREA, отслеживает кажлдый новый символ\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPostsContainer: (newPostText) => {\r\n      dispatch(addPostActionCreater(newPostText)); // диспатчим action в stat\r\n      dispatch(reset('profileAddMessage'))\r\n    },\r\n  }\r\n};\r\n// конец функции\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div >\r\n      <ProfileInfo \r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatusTC={props.updateStatusTC}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { \r\n  getUserProfileTC,\r\n  getStatusTC,\r\n  updateStatusTC,\r\n} from \"../../redux/profille-reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n  return(props)=>{\r\n     const match  = {params: useParams()};\r\n     return <Children {...props}  match = {match}/>\r\n }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.autorizedUserId;\r\n    }\r\n    this.props.getUserProfileTC(userId);\r\n    console.log(this.props)\r\n    this.props.getStatusTC(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatusTC={this.props.updateStatusTC}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet maxStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  updateStatusTC: state.profilePage.updateStatusTC,\r\n  autorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\n/* const WithRouterComponent = (props) => {\r\n  debugger\r\n  const params = useParams();\r\n  return (\r\n      <ProfileContainer\r\n          {...props} // Пропсы из mapStateToProps, {setUserProfile}\r\n          userId={params.userId ? params.userId : '2'} // Если такого userId нету, то отобразить 2\r\n      />\r\n  );\r\n} */\r\n\r\nexport default compose(\r\n  connect(maxStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC}),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet maxStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectConponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(maxStateToPropsForRedirect)(RedirectConponent);\r\n\r\n  return ConnectedAuthRedirectComponent\r\n};\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","console","log","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusTC","profile","className","s","src","photos","small","userPhoto","alt","Preloader","message","likesCount","MyPosts","React","postsElement","posts","reverse","map","p","lieksCount","OnFormMyPostRedux","onSubmit","formData","addPostsContainer","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","action","Field","name","placeholder","component","Textarea","validate","required","connect","state","profilePage","dispatch","addPostActionCreater","reset","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","autorizedUserId","getUserProfileTC","getStatusTC","compose","auth","id","isAuth","withAuthRedirect","maxStateToPropsForRedirect","Component","RedirectConponent","to"],"sourceRoot":""}