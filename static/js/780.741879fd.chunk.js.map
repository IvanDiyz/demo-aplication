{"version":3,"file":"static/js/780.741879fd.chunk.js","mappings":"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","sources":["webpack://react-k-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-k-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-k-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Qdrif\",\"mainPhoto\":\"ProfileInfo_mainPhoto__P+xgq\",\"contacts\":\"ProfileInfo_contacts__d4E-3\",\"contacts__item\":\"ProfileInfo_contacts__item__f152m\",\"formSummareError\":\"ProfileInfo_formSummareError__XMBZY\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    let activetEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n\r\n    let deactivetEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatusTC(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    console.log('render');\r\n    return (\r\n      <div>\r\n          { !editMode &&\r\n            <div>\r\n            <b>Status:</b> <span onDoubleClick={activetEditMode}>{props.status || '----'}</span>\r\n          </div>\r\n          }\r\n          { editMode &&\r\n            <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivetEditMode} value={status} />\r\n          </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport { creatField, Textarea, Input } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  console.log(props)\r\n  return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            { props.error && <div className={s.formSummareError}>\r\n              {props.error}\r\n            </div>}\r\n            <div>\r\n              <div>\r\n                <b>Full name</b>: {creatField('Full name', 'fullName', [], Input, 'text')}\r\n              </div>\r\n              <div>\r\n                <b>Looking for a job</b>: {creatField('', 'lookingForAJob', [], Input, 'checkbox')}\r\n              </div>\r\n                <div>\r\n                  <b>My professional skills</b>: {creatField('My professional skills', 'lookingForAJobDescription', [], Textarea, 'text')}\r\n                </div>\r\n              <div>\r\n                <b>About Me</b>: {creatField('About Me', 'aboutMe', [], Textarea, 'text')}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className={s.contacts}>\r\n                <b>Contacts</b>: {Object.keys(props.profile.contacts).map((key) => {\r\n                  return (\r\n                    <div key={key} className={s.contact}>\r\n                      <b>{key}: {creatField(key, 'contacts.'+key, [], Input, 'text')}</b>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n  );\r\n}\r\n\r\nconst ProfileDataFormReduxFormn = reduxForm({\r\n  form: \"edit-profile\",\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxFormn;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/users.png\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const MainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      props.savePhotoTC(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n        setEditMode(false);\r\n      })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img\r\n          src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\r\n          alt=\"\"\r\n        />\r\n      </div> */}\r\n      <div className={s.descriptionBlock}>\r\n        <img className={s.mainPhoto} src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} alt=\"\" />\r\n        { props.isOwner && <input type={\"file\"} onChange={MainPhotoSelected} /> }\r\n\r\n        {editMode ? \r\n          <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile} /> \r\n          : <ProfileData \r\n            profile={props.profile}  \r\n            goToEditMode={()=>{setEditMode(true)}} \r\n            isOwner={props.isOwner}\r\n          />}\r\n        \r\n\r\n        <div>\r\n          <ProfileStatusWithHooks \r\n            status={props.status}\r\n            updateStatusTC={props.updateStatusTC}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n        <div>\r\n          {props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n          <div>\r\n            <div>\r\n              <b>Full name</b>: {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n              <b>Looking for a job</b>: {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n              <div>\r\n                <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n              </div>\r\n            }\r\n            <div>\r\n              <b>About Me</b>: {props.profile.aboutMe}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <div className={s.contacts}>\r\n              <b>Contacts</b>: {Object.keys(props.profile.contacts).map((key) => {\r\n                return <Contact key={key} cotactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\nconst Contact = ({cotactTitle, contactValue}) => {\r\n  return <div className={s.contacts__item}> <b>{cotactTitle}:</b> {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__-HkGl\",\"posts\":\"MyPosts_posts__iJcmi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__V2Jmh\",\"avatar\":\"Post_avatar__PzDhz\"};","import s from \"./Post.module.css\";\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        className={s.avatar}\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRW8fN0rNZsyZlz8r0VSpNNk_h-iJ6IZ99NPA&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo(\r\n  (props) => {\r\n    console.log('render MyPost')\r\n    let postsElement = [...props.posts].reverse().map((p) => {\r\n      /* через метод MAP мвы в параметре M передает каждый обьект posts по очереди \r\n      и помещаем в компоненту POST как PROPS */\r\n      return <Post key={p.id} message={p.message} likesCount={p.lieksCount} />;\r\n    });\r\n  \r\n    let addMessage = (formData) => {\r\n      console.log(props)\r\n      props.addPostsContainer(formData.newPostText)\r\n    }\r\n  \r\n    return (\r\n      <div className={s.postsBlock}>\r\n        <h3>my post</h3>\r\n        <div>\r\n          <OnFormMyPostRedux onSubmit={addMessage}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n          {postsElement}\r\n          {/* компоненты Post мы зарефакатарели через метод обьекта MAP и превратили \r\n          все посты в строчку вышел\r\n          <Post message={postsData[0].message} likesCount={postsData[0].lieksCount} />\r\n          <Post message={postsData[1].message} likesCount={postsData[1].lieksCount} /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet OnFormMyPost = (props) => {\r\n  console.log(props)\r\n  return (\r\n    <form onSubmit={props.handleSubmit} action=\"\">\r\n      <div>\r\n        <Field \r\n          name=\"newPostText\" \r\n          placeholder=\"Your Message\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet OnFormMyPostRedux = reduxForm({form: \"profileAddMessage\"})(OnFormMyPost)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreater,\r\n} from \"../../../redux/profille-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\n\r\n\r\n // функция добовляющая пост\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\n// функция добовляющая пост\r\n\r\n\r\n// функция отслеживает изменения в теги TEXTAREA, отслеживает кажлдый новый символ\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPostsContainer: (newPostText) => {\r\n      dispatch(addPostActionCreater(newPostText)); // диспатчим action в stat\r\n      dispatch(reset('profileAddMessage'))\r\n    },\r\n  }\r\n};\r\n// конец функции\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div >\r\n      <ProfileInfo \r\n        savePhotoTC={props.savePhotoTC}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfileTC}\r\n        updateStatusTC={props.updateStatusTC}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { \r\n  getUserProfileTC,\r\n  getStatusTC,\r\n  updateStatusTC,\r\n  savePhotoTC,\r\n  saveProfileTC,\r\n} from \"../../redux/profille-reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n  return(props)=>{\r\n     const match  = {params: useParams()};\r\n     return <Children {...props}  match = {match}/>\r\n }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.autorizedUserId;\r\n    }\r\n    this.props.getUserProfileTC(userId);\r\n    console.log(this.props)\r\n    this.props.getStatusTC(userId);\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          isOwner= {!this.props.match.params.userId}\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatusTC={this.props.updateStatusTC}\r\n          savePhotoTC={this.props.savePhotoTC}\r\n          saveProfileTC={this.props.saveProfileTC}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nlet maxStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  updateStatusTC: state.profilePage.updateStatusTC,\r\n  autorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\n/* const WithRouterComponent = (props) => {\r\n  debugger\r\n  const params = useParams();\r\n  return (\r\n      <ProfileContainer\r\n          {...props} // Пропсы из mapStateToProps, {setUserProfile}\r\n          userId={params.userId ? params.userId : '2'} // Если такого userId нету, то отобразить 2\r\n      />\r\n  );\r\n} */\r\n\r\nexport default compose(\r\n  connect(maxStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC, savePhotoTC, saveProfileTC}),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet maxStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectConponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(maxStateToPropsForRedirect)(RedirectConponent);\r\n\r\n  return ConnectedAuthRedirectComponent\r\n};\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","console","log","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusTC","reduxForm","form","onSubmit","handleSubmit","error","className","s","creatField","Input","Textarea","Object","keys","profile","contacts","map","key","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","cotactTitle","contactValue","src","photos","large","userPhoto","alt","type","target","files","length","savePhotoTC","initialValues","formData","saveProfile","then","Preloader","message","likesCount","MyPosts","React","postsElement","posts","reverse","p","lieksCount","id","OnFormMyPostRedux","addPostsContainer","newPostText","maxLength10","maxLengthCreator","action","Field","name","placeholder","component","validate","required","connect","state","profilePage","dispatch","addPostActionCreater","reset","saveProfileTC","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","autorizedUserId","getUserProfileTC","getStatusTC","refreshProfile","prevProps","compose","auth","isAuth","withAuthRedirect","maxStateToPropsForRedirect","Component","RedirectConponent","to"],"sourceRoot":""}